// src/components/Security/SecurityAlerts.jsx - Real Data Analysis
import React, { useState, useEffect } from 'react';

const SecurityAlerts = ({ logData = [] }) => {
  const [alerts, setAlerts] = useState([]);
  const [loading, setLoading] = useState(true);

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á
  const generateRealAlerts = () => {
    console.log('üö® Generating real alerts from data...', { logDataCount: logData.length });
    
    if (!logData || logData.length === 0) {
      setAlerts([]);
      setLoading(false);
      return;
    }

    const now = new Date();
    const recentAlerts = [];

    // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î 100 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå
    const recentLogs = logData.slice(-100);

    // 1. ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò
    recentLogs.forEach(log => {
      const isDenied = log.allow === false || log.allow === 0 || log.reason;
      
      if (isDenied) {
        recentAlerts.push({
          alertType: 'ACCESS_DENIED',
          severity: determineAccessDeniedSeverity(log),
          cardName: log.cardName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
          location: log.location || log.door || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
          accessTime: log.dateTime,
          reason: log.reason || '‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò',
          userType: log.userType || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
          device: log.device,
          direction: log.direction
        });
      }
    });

    // 2. ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ô‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤
    recentLogs.forEach(log => {
      if (log.dateTime) {
        const accessTime = new Date(log.dateTime);
        const hour = accessTime.getHours();
        
        if (hour < 6 || hour > 22) {
          recentAlerts.push({
            alertType: 'UNUSUAL_TIME',
            severity: hour < 4 || hour > 23 ? 'high' : 'medium',
            cardName: log.cardName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
            location: log.location || log.door || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
            accessTime: log.dateTime,
            reason: `‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ô‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥ (${hour}:00)`,
            userType: log.userType || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
            hour: hour
          });
        }
      }
    });

    // 3. ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    const attemptGroups = {};
    recentLogs.forEach(log => {
      if (log.allow === false || log.allow === 0) {
        const key = `${log.cardName || log.cardNumber || 'Unknown'}_${log.location || log.door || 'Unknown'}`;
        if (!attemptGroups[key]) {
          attemptGroups[key] = [];
        }
        attemptGroups[key].push(log);
      }
    });

    Object.entries(attemptGroups).forEach(([key, attempts]) => {
      if (attempts.length >= 2) {
        const [cardName, location] = key.split('_');
        const latestAttempt = attempts[attempts.length - 1];
        
        recentAlerts.push({
          alertType: 'MULTIPLE_ATTEMPTS',
          severity: attempts.length >= 3 ? 'high' : 'medium',
          cardName: cardName,
          location: location,
          accessTime: latestAttempt.dateTime,
          reason: `‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ${attempts.length} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ã‡πâ‡∏≠‡∏ô`,
          userType: latestAttempt.userType || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
          attemptCount: attempts.length
        });
      }
    });

    // 4. ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ó‡∏µ‡πà‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥ (‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á)
    recentLogs.forEach(log => {
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏´‡∏£‡∏∑‡∏≠ permission ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô
      if (log.direction && log.permission && log.allow === true) {
        // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤ OUT ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ permission ‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
        if (log.direction === 'OUT' && !log.permission) {
          recentAlerts.push({
            alertType: 'PERMISSION_MISMATCH',
            severity: 'medium',
            cardName: log.cardName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
            location: log.location || log.door || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
            accessTime: log.dateTime,
            reason: `‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á ${log.direction} ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°`,
            userType: log.userType || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
            direction: log.direction,
            permission: log.permission
          });
        }
      }
    });

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    recentAlerts.sort((a, b) => new Date(b.accessTime) - new Date(a.accessTime));
    
    setAlerts(recentAlerts.slice(0, 50)); // ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà 50 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    console.log('‚úÖ Generated real alerts:', recentAlerts.length);
    setLoading(false);
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡πâ‡∏≤‡∏¢/‡πÅ‡∏£‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò
  const determineAccessDeniedSeverity = (log) => {
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ reason ‡∏ó‡∏µ‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á‡∏Å‡∏ß‡πà‡∏≤
    if (log.reason) {
      if (log.reason.includes('INVALID') || log.reason.includes('EXPIRED')) {
        return 'high';
      }
      return 'medium';
    }
    return 'low';
  };

  useEffect(() => {
    generateRealAlerts();
  }, [logData]);

  // Alert severity styling
  const getSeverityStyle = (severity) => {
    switch (severity) {
      case 'high':
        return 'bg-red-50 border-red-200 text-red-800';
      case 'medium':
        return 'bg-yellow-50 border-yellow-200 text-yellow-800';
      case 'low':
        return 'bg-blue-50 border-blue-200 text-blue-800';
      default:
        return 'bg-gray-50 border-gray-200 text-gray-800';
    }
  };

  // Alert type icons
  const getAlertIcon = (alertType) => {
    switch (alertType) {
      case 'ACCESS_DENIED':
        return 'üö´';
      case 'UNUSUAL_TIME':
        return 'üïê';
      case 'MULTIPLE_ATTEMPTS':
        return 'üîÑ';
      case 'PERMISSION_MISMATCH':
        return '‚ö†Ô∏è';
      default:
        return 'üö®';
    }
  };

  // Alert type names
  const getAlertTypeName = (alertType) => {
    switch (alertType) {
      case 'ACCESS_DENIED':
        return '‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò';
      case 'UNUSUAL_TIME':
        return '‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ô‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤';
      case 'MULTIPLE_ATTEMPTS':
        return '‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
      case 'PERMISSION_MISMATCH':
        return '‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô';
      default:
        return '‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô';
    }
  };

  if (loading) {
    return (
      <div className="bg-white rounded-lg shadow-sm p-6">
        <div className="animate-pulse">
          <div className="h-4 bg-gray-200 rounded w-1/4 mb-4"></div>
          <div className="space-y-3">
            {[1, 2, 3].map(i => (
              <div key={i} className="h-16 bg-gray-200 rounded"></div>
            ))}
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="bg-white rounded-lg shadow-sm">
      <div className="px-6 py-4 border-b border-gray-200">
        <div className="flex items-center justify-between">
          <div className="flex items-center">
            <span className="text-xl mr-2">üö®</span>
            <h3 className="text-lg font-semibold text-gray-900">
              ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á
            </h3>
          </div>
          <div className="flex items-center text-sm text-gray-500">
            <div className="w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse"></div>
            ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏≤‡∏Å {logData.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
          </div>
        </div>
      </div>

      <div className="p-6">
        {alerts.length === 0 ? (
          <div className="text-center py-8">
            <span className="text-4xl mb-2 block">‚úÖ</span>
            <p className="text-gray-500">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</p>
            <p className="text-sm text-gray-400 mt-1">‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥</p>
          </div>
        ) : (
          <>
            {/* Alert Statistics */}
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
              <div className="text-center p-3 bg-red-50 rounded-lg">
                <div className="text-2xl font-bold text-red-600">
                  {alerts.filter(a => a.severity === 'high').length}
                </div>
                <div className="text-xs text-red-600">‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô</div>
              </div>
              <div className="text-center p-3 bg-yellow-50 rounded-lg">
                <div className="text-2xl font-bold text-yellow-600">
                  {alerts.filter(a => a.severity === 'medium').length}
                </div>
                <div className="text-xs text-yellow-600">‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á</div>
              </div>
              <div className="text-center p-3 bg-blue-50 rounded-lg">
                <div className="text-2xl font-bold text-blue-600">
                  {alerts.filter(a => a.severity === 'low').length}
                </div>
                <div className="text-xs text-blue-600">‡∏ï‡πà‡∏≥</div>
              </div>
              <div className="text-center p-3 bg-gray-50 rounded-lg">
                <div className="text-2xl font-bold text-gray-600">
                  {alerts.length}
                </div>
                <div className="text-xs text-gray-600">‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
              </div>
            </div>

            {/* Alert List */}
            <div className="space-y-3">
              {alerts.slice(0, 15).map((alert, index) => (
                <div
                  key={index}
                  className={`p-4 rounded-lg border ${getSeverityStyle(alert.severity)}`}
                >
                  <div className="flex items-start justify-between">
                    <div className="flex items-start">
                      <span className="text-lg mr-3 mt-1">
                        {getAlertIcon(alert.alertType)}
                      </span>
                      <div className="flex-1">
                        <div className="flex items-center gap-2 mb-1">
                          <span className="font-medium">
                            {getAlertTypeName(alert.alertType)}
                          </span>
                          <span className={`px-2 py-1 text-xs rounded-full ${getSeverityStyle(alert.severity)}`}>
                            {alert.severity === 'high' ? '‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô' :
                             alert.severity === 'medium' ? '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á' : '‡∏ï‡πà‡∏≥'}
                          </span>
                        </div>
                        
                        <div className="text-sm space-y-1">
                          <p>
                            <strong>‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:</strong> {alert.cardName}
                          </p>
                          <p>
                            <strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà:</strong> {alert.location}
                          </p>
                          <p>
                            <strong>‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:</strong> {alert.reason}
                          </p>
                          {alert.userType && alert.userType !== '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏' && (
                            <p>
                              <strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:</strong> {alert.userType}
                            </p>
                          )}
                          {alert.device && (
                            <p>
                              <strong>‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå:</strong> {alert.device}
                            </p>
                          )}
                          {alert.direction && (
                            <p>
                              <strong>‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á:</strong> {alert.direction}
                            </p>
                          )}
                          {alert.attemptCount && (
                            <p>
                              <strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á:</strong> {alert.attemptCount}
                            </p>
                          )}
                        </div>
                      </div>
                    </div>
                    
                    <div className="text-right text-xs text-gray-500 ml-4">
                      <div>
                        {new Date(alert.accessTime).toLocaleTimeString('th-TH')}
                      </div>
                      <div>
                        {new Date(alert.accessTime).toLocaleDateString('th-TH')}
                      </div>
                    </div>
                  </div>
                </div>
              ))}
              
              {alerts.length > 15 && (
                <div className="text-center pt-4 border-t">
                  <p className="text-sm text-gray-500">
                    ‡πÅ‡∏™‡∏î‡∏á 15 ‡∏à‡∏≤‡∏Å {alerts.length} ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                  </p>
                </div>
              )}
            </div>
          </>
        )}
      </div>

      <div className="px-6 py-3 bg-gray-50 rounded-b-lg">
        <div className="flex items-center justify-between text-xs text-gray-600">
          <div>
            üìä ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á: {alerts.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
          </div>
          <div>
            üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: {new Date().toLocaleTimeString('th-TH')}
          </div>
        </div>
      </div>
    </div>
  );
};

export default SecurityAlerts;